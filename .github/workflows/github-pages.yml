name: GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  # This is needed for enablement
  actions: write
  deployments: write
  statuses: write
  repository-projects: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true
          # Optional: use a PAT if GITHUB_TOKEN doesn't have required permissions
          # token: ${{ secrets.GH_PAGES_TOKEN }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Generate JavaDoc
        run: |
          mkdir -p docs/javadoc
          mvn javadoc:javadoc -Dshowwarnings=false
          
          # Check for different potential output paths
          if [ -d "target/site/apidocs" ]; then
            cp -r target/site/apidocs/* docs/javadoc/ || echo "No files to copy from target/site/apidocs"
          elif [ -d "target/apidocs" ]; then
            cp -r target/apidocs/* docs/javadoc/ || echo "No files to copy from target/apidocs"
          elif [ -d "target/javadoc" ]; then
            cp -r target/javadoc/* docs/javadoc/ || echo "No files to copy from target/javadoc"
          else
            echo "JavaDoc files not found in expected locations, creating placeholder"
            echo "<html><body><h1>JavaDoc will be available soon</h1></body></html>" > docs/javadoc/index.html
          fi
          
          # Verify javadoc directory has content
          ls -la docs/javadoc || echo "Javadoc directory is empty or doesn't exist"
      
      # Simple static approach instead of Docusaurus
      - name: Build Simple Static Site
        run: |
          # Copy our static HTML files
          mkdir -p build-output
          cp -r docs/* build-output/
          
          # Copy contributing and other files to make links work
          if [ -f "CONTRIBUTING.md" ]; then
            cp CONTRIBUTING.md build-output/
          fi
          if [ -f "CODE_OF_CONDUCT.md" ]; then
            cp CODE_OF_CONDUCT.md build-output/
          fi
          if [ -f "SECURITY.md" ]; then
            cp SECURITY.md build-output/
          fi
          
          # Convert README to index.html if not already exists
          if [ ! -f "build-output/index.html" ]; then
            echo '<!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>FileVault Documentation</title>
                <style>
                    body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif; line-height: 1.6; color: #333; max-width: 800px; margin: 0 auto; padding: 20px; }
                    header { text-align: center; margin-bottom: 40px; }
                    h1 { color: #2c3e50; }
                    h2 { color: #3498db; margin-top: 30px; }
                    a { color: #3498db; text-decoration: none; }
                    a:hover { text-decoration: underline; }
                    code { background-color: #f5f5f5; padding: 2px 4px; border-radius: 3px; font-family: monospace; }
                    pre { background-color: #f5f5f5; padding: 15px; border-radius: 5px; overflow-x: auto; }
                    .button { display: inline-block; background: #3498db; color: white; padding: 10px 15px; border-radius: 5px; margin: 10px 0; text-decoration: none; }
                    .button:hover { background: #2980b9; text-decoration: none; }
                    footer { margin-top: 40px; padding-top: 20px; border-top: 1px solid #eee; text-align: center; color: #777; }
                </style>
            </head>
            <body>
                <header>
                    <h1>FileVault</h1>
                    <p>Eine sichere Anwendung zur Verwaltung und Verschlüsselung von Dateien</p>
                </header>
                <nav>
                    <a href="documentation.html" class="button">Dokumentation</a>
                    <a href="javadoc/index.html" class="button">JavaDoc</a>
                    <a href="https://github.com/GulfGulfinson/fileVault" class="button">GitHub Repository</a>
                </nav>
                <main>' > build-output/index.html
                
                # Convert README.md content to HTML (basic conversion)
                echo "<div class=\"readme-content\">" >> build-output/index.html
                echo "<h2>Projekt Übersicht</h2>" >> build-output/index.html
                cat README.md | sed 's/# /\<h1\>/g' | sed 's/## /\<h2\>/g' | sed 's/### /\<h3\>/g' | sed 's/\*\*/\<strong\>/g' | sed 's/\*\*/\<\/strong\>/g' | sed 's/`/\<code\>/g' | sed 's/`/\<\/code\>/g' >> build-output/index.html
                echo "</div>" >> build-output/index.html
                
                echo '
                </main>
                <footer>
                    <p>FileVault ist ein Projekt von Phillip Schneider.</p>
                </footer>
            </body>
            </html>' >> build-output/index.html
          fi
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build-output

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 