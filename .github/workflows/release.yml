name: Create Release

on:
  push:
    tags:
      - 'v*'  # Wird ausgeführt, wenn ein Tag gepusht wird, das mit 'v' beginnt

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Install xvfb
        run: sudo apt-get install -y xvfb
      
      - name: Build and Test with Maven
        run: xvfb-run --auto-servernum mvn -B package --file pom.xml

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Prepare release files
        run: |
          mkdir -p release
          cp target/FileVault-shaded.jar release/
          cp README.md release/
          cp LICENSE release/ || echo "LICENSE file not found"
          cp start.bat release/
          cp start.sh release/
          cp start-api.bat release/
          cp start-api.sh release/
          chmod +x release/*.sh
          
          # JavaFX lib-Ordner für direkte Ausführung kopieren
          mkdir -p release/lib
          cp -r lib/* release/lib/
          
          # Erstellen einer Anleitung zur Ausführung
          cat > release/AUSFÜHRUNG.md << 'EOL'
          # Anleitung zur Ausführung von FileVault

          ## Voraussetzungen
          - Java 17 oder höher
          - Maven (falls Sie nicht das JAR direkt verwenden)

          ## Ausführung mit den Skripten
          ### Windows
          1. Doppelklick auf `start.bat` - startet die Anwendung mit dem Standard-API-Port 9090
          2. Oder von der Kommandozeile: `start.bat [PORT]` - spezifiziert einen anderen Port

          ### Linux/Mac
          1. Stellen Sie sicher, dass die Skripte ausführbar sind: `chmod +x *.sh`
          2. Ausführen mit: `./start.sh` - startet die Anwendung mit dem Standard-API-Port 9090
          3. Oder mit anderem Port: `./start.sh [PORT]`

          ## Ausführung nur der API
          ### Windows
          - `start-api.bat [PORT]`

          ### Linux/Mac
          - `./start-api.sh [PORT]`

          ## Direkte Ausführung der JAR (Alternative)
          ```
          java -jar FileVault-shaded-*.jar --api-port=9090
          ```

          ## WICHTIG: JavaFX-Abhängigkeiten
          Der lib-Ordner mit den JavaFX-Bibliotheken ist erforderlich, damit die Anwendung korrekt läuft.
          Die Start-Skripte sind so konfiguriert, dass sie den lib-Ordner im aktuellen Verzeichnis verwenden.

          ## Erste Schritte
          1. Bei der ersten Ausführung wird ein neuer Benutzer angelegt
          2. Für einen neuen Benutzer muss die Datenbank gelöscht werden (im ~/.filevault/ Verzeichnis)
          EOL
          
          # Erstellen eines ZIP-Archivs
          cd release
          zip -r ../FileVault-${{ steps.get_version.outputs.VERSION }}.zip .
          cd ..
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            FileVault-${{ steps.get_version.outputs.VERSION }}.zip
            target/FileVault-shaded.jar
            release/AUSFÜHRUNG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 